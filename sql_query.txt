SELECT *
  FROM [Tenant].[project_schema].[addresses]

SELECT *
  FROM [Tenant].[project_schema].[referrals]

SELECT *
  FROM [Tenant].[project_schema].[Profiles]

  SELECT *
  FROM [Tenant].[project_schema].[employment_details]

SELECT *
  FROM [Tenant].[project_schema].[houses]

SELECT *
  FROM [Tenant].[project_schema].[tenancy_histories]

update project_schema.tenancy_histories
set move_out_date = try_cast(move_out_date as date)



question no.1:Write a query to get Profile ID, Full Name and Contact Number of the tenant who has stayed with us for the longest time period in the past.

SELECT top 1
    t.profile_id AS Profile_ID,
    concat(t.first_name ,' ',t.last_name ) AS Full_Name,
    t.phone AS Contact_Number
FROM
   project_schema.Profiles t
JOIN
    project_schema.tenancy_histories l ON t.profile_id = l.profile_id
WHERE
    l.move_out_date IS NOT NULL  
ORDER BY
    DATEDIFF(DAY, l.move_in_date, l.move_out_date) DESC  


question no.2: Write a query to get the Full name, email id, phone of tenants who are married and paying rent > 9000 using subqueries


SELECT 
    concat(t.first_name ,' ',t.last_name ) AS Full_Name,
    t.email as email_id,
	t.phone AS Contact_Number
FROM
   project_schema.Profiles t
JOIN
    project_schema.tenancy_histories l ON t.profile_id = l.profile_id
WHERE
    t.marital_status='Y' 
	and	t.profile_id in (
	SELECT l.profile_id
        FROM project_schema.tenancy_histories l
        WHERE l.rent > 9000)


question no.3: Write a query to display profile id, full name, phone, email id, city, house id, move_in_date ,move_out date, rent, total number of referrals made, latest employer and the occupational category of all the tenants living in Bangalore or Pune in the time period of jan 2015 to jan 2016 sorted by their rent in descending order


SELECT 
    t.profile_id,
    CONCAT(t.first_name, ' ', t.last_name) AS full_name,
    t.phone,
    t.email,
    t.city,
    l.house_id,
    l.move_in_date,
    l.move_out_date,
    l.rent,
    (SELECT COUNT(*) FROM project_schema.referrals f WHERE f.referrer_id = t.profile_id) AS total_referrals,
    e.latest_employer,
    e.occupational_category
FROM 
    project_schema.Profiles t
JOIN 
    project_schema.tenancy_histories l ON t.profile_id = l.profile_id
JOIN 
    project_schema.employment_details e ON t.profile_id = e.profile_id
WHERE 
    (t.city = 'Bangalore' OR t.city = 'Pune')
    AND l.move_in_date >= '2015-01-01'
    AND l.move_out_date <= '2016-01-31'
ORDER BY 
    l.rent DESC


question no.4: Write a sql snippet to find the full_name, email_id, phone number and referral code of all the tenants who have referred more than once.
Also find the total bonus amount they should receive given that the bonus gets calculated
only for valid referrals.


SELECT 
    CONCAT(t.first_name, ' ', t.last_name) AS full_name,
    t.email,
    t.phone,
    t.referral_code,
    COUNT(r.referrer_id) AS total_referrals,
    COUNT(CASE WHEN r.referral_valid = 1 THEN 1 END) * 100 AS total_bonus
FROM 
    project_schema.Profiles t
JOIN 
    project_schema.referrals r ON t.profile_id = r.referrer_id
GROUP BY 
    t.profile_id, t.first_name, t.last_name, t.email, t.phone, t.referral_code
HAVING 
    COUNT(r.referrer_id) > 1


question no.5: Write a query to find the rent generated from each city and also the total of all cities.

SELECT 
    t.city,
    SUM(l.rent) AS total_rent_from_city
FROM 
	project_schema.tenancy_histories l
join 
	project_schema.Profiles t on l.profile_id= t.profile_id
GROUP BY 
    t.city
UNION ALL
SELECT 
    'Total' AS city, 
    SUM(l.rent) AS total_rent_from_city
FROM 
    project_schema.tenancy_histories l


question no.10: Write a query to get the house details of the house having highest occupancy

select top 1 house_id,house_type,bhk_details,bed_count,beds_vacant,(bed_count - beds_vacant) AS bed_occupied,furnishing_type
from project_schema.houses
order by bed_occupied desc


question no.6: Create a view 'vw_tenant' find profile_id,rent,move_in_date,house_type,beds_vacant,description and city of tenants who
shifted on/after 30th april 2015 and are living in houses having vacant beds and its address.

CREATE VIEW vw_tenant AS
SELECT t.profile_id,
       t.city,
       l.rent, 
       l.move_in_date, 
       h.house_type, 
       h.beds_vacant, 
       a.description
FROM project_schema.Profiles t
JOIN project_schema.tenancy_histories l ON t.profile_id=l.profile_id
JOIN project_schema.houses h ON h.house_id = l.house_id
JOIN project_schema.addresses a ON h.house_id=a.house_id
WHERE l.move_in_date >= '2015-04-30'
  AND h.beds_vacant > 0


question no.7: Write a code to extend the valid_till date for a month of tenants who have referred more than one time

select
	concat(t.first_name,' ' , t.last_name) as full_name,
	t.phone as contact,
	t.city,
	h.house_type,
	h.bhk_details,
	h.furnishing_type
from project_schema.Profiles t
join project_schema.tenancy_histories l on t.profile_id=l.profile_id
join project_schema.houses h on h.house_id= l.house_id
left join project_schema.referrals r on t.profile_id=r.referrer_id
where r.referrer_id is null
